package com.jmx2{	import flash.events.TimerEvent;	import flash.utils.Timer;		/* 		delayedFunctionCall takes 2 parameters				1. a reference to the function you want to call later		2. a number that represents the number of milliseconds to wait until the function will be executed						Example usage:				import com.jmx2.delayedFunctionCall;				// the time vaule is in milliseconds, 1000 milliseconds = 1 second		new delayedFunctionCall(myFunctionToStartLater, 3500);				function myFunctionToStartLater():void {			trace("This function executed 3 and a half seconds after it was called by using the delayedFuctionCall function.");		}	*/			public class delayedFunctionCall	{		private var myTimer:Timer;		private var myTimerEvent:TimerEvent;		private var delayedFunction:Function;				public function delayedFunctionCall(whatFunctionToDelay:Function, delayInMilliseconds:Number)		{			this.delayedFunction = whatFunctionToDelay;			myTimer = new Timer(delayInMilliseconds, 1);			myTimer.addEventListener(TimerEvent.TIMER_COMPLETE, callDelayedFunction);			myTimer.start();		}				private function callDelayedFunction(event:TimerEvent) {			myTimer.removeEventListener(TimerEvent.TIMER_COMPLETE, callDelayedFunction);			//trace("delayyedFunction: " + this.delayedFunction);			delayedFunction();		}	}}